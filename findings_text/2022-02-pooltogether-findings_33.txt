## [G-00] Reduce Runtime Gas With Modifiers  **Severity**: _Gas_ **Likelihood**: _High_ **Status**: {Submitted} **Scope**: [`TWABDelegator.sol`](https://github.com/pooltogether/v4-twab-delegator/blob/2b6d42506187dd7096043e2dfec65fa06ab18577/contracts/TWABDelegator.sol)  Multiple `internal` functions in `TWABDelegator` can be turned into modifiers to reduce runtime gas costs at the expense of increasing the deployment cost.  Below, we show the gas costs of internal functions (first image) and using modifiers instead (second image).  ![Gas costs when using internal function calls](https://i.imgur.com/nDbGkhS.png) _Gas costs when using internal function calls_  ![Gas Costs when using Modifiers](https://i.imgur.com/07q5nys.png) _Gas costs when using modifiers_  Functions changed to modifiers to achieve the above results:  - [`_requireDelegatorOrRepresentative(address _delegator)`](https://github.com/pooltogether/v4-twab-delegator/blob/2b6d42506187dd7096043e2dfec65fa06ab18577/contracts/TWABDelegator.sol#L577-L586) - [`_requireDelegateeNotZeroAddress(address _delegatee)`](https://github.com/pooltogether/v4-twab-delegator/blob/2b6d42506187dd7096043e2dfec65fa06ab18577/contracts/TWABDelegator.sol#L588-L594) - [`_requireAmountGtZero(uint256 _amount)`](https://github.com/pooltogether/v4-twab-delegator/blob/2b6d42506187dd7096043e2dfec65fa06ab18577/contracts/TWABDelegator.sol#L596-L602) - [`_requireDelegatorNotZeroAddress(address _delegator)`](https://github.com/pooltogether/v4-twab-delegator/blob/2b6d42506187dd7096043e2dfec65fa06ab18577/contracts/TWABDelegator.sol#L604-L610) - [`_requireRecipientNotZeroAddress(address _to)`](https://github.com/pooltogether/v4-twab-delegator/blob/2b6d42506187dd7096043e2dfec65fa06ab18577/contracts/TWABDelegator.sol#L612-L618) - [`_requireLockDuration(uint256 _lockDuration)`](https://github.com/pooltogether/v4-twab-delegator/blob/2b6d42506187dd7096043e2dfec65fa06ab18577/contracts/TWABDelegator.sol#L636-L642)   **Recommendation**: Change the specified internal functions into modifiers to reduce runtime gas costs at the expense of bytecode bloat (increased deployment costs). This also requires changing their usage into modifier syntax rather than _call_.   ## [G-01] Solmate Port  **Severity**: _Gas_ **Likelihood**: _High_ **Status**: {Submitted} **Scope**: [`contracts/*`](https://github.com/pooltogether/v4-twab-delegator/tree/2b6d42506187dd7096043e2dfec65fa06ab18577/contracts)  **Recommendation**: Port contracts over to using [solmate](https://github.com/Rari-Capital/solmate) to significantly reduce openzeppelin bloat (will require a custom write of ERC20Permit and its interface as well as deterministic cloning (ref: https://github.com/Rari-Capital/vaults)).   ## [I-00] Inconsistent Licensing  **Severity**: _Informational_ **Likelihood**: _High_ **Status**: {Submitted} **Scope**: [`contracts/*`](https://github.com/pooltogether/v4-twab-delegator/tree/2b6d42506187dd7096043e2dfec65fa06ab18577/contracts)  `Delegation.sol` has SPDX Identifier: `// SPDX-License-Identifier: MIT` `LowLevelDelegator.sol` has SPDX Identifier: `// SPDX-License-Identifier: GPL-3.0` `PermitAndMulticall.sol` has SPDX Identifier: `// SPDX-License-Identifier: MIT` `TWABDelegator.sol` has SPDX Identifier: `// SPDX-License-Identifier: GPL-3.0`  `test/TWABDelegatorHarness.sol` has SPDX Identifier: `// SPDX-License-Identifier: GPL-3.0`  **Recommendation**: Coalesce SPDX License Identifiers into one canonical license unless necessary.  
