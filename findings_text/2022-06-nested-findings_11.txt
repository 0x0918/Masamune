## Missing Zero-address Validation **Severity**: Low **Context**: [`Withdrawer.sol#L16-L18`](https://github.com/code-423n4/2022-06-nested/blob/main/contracts/Withdrawer.sol#L16-L18), [`YearnCurveVaultOperator.sol#L31-L51`](https://github.com/code-423n4/2022-06-nested/blob/main/contracts/operators/Yearn/YearnCurveVaultOperator.sol#L31-L51)  **Description**: Lack of zero-address validation on address parameters may lead to transaction reverts, waste gas, require resubmission of transactions and may even force contract redeployments in certain cases within the protocol.  **Recommendation**: Add explicit zero-address validation on input parameters of address type.   ## Missing Time locks **Severity**: Low **Context**: [`NestedFactory.sol#L121-L179`](https://github.com/code-423n4/2022-06-nested/blob/main/contracts/NestedFactory.sol#L121-L179), [`BeefyVaultStorage.sol#L34-L38`](https://github.com/code-423n4/2022-06-nested/blob/main/contracts/operators/Beefy/BeefyVaultStorage.sol#L34-L38)  **Description**: When critical parameters of systems need to be changed, it is required to broadcast the change via event emission and recommended to enforce the changes after a time-delay. This is to allow system users to be aware of such critical changes and give them an opportunity to exit or adjust their engagement with the system accordingly. None of the onlyOwner functions that change critical protocol addresses/parameters have a timelock for a time-delayed change to alert: (1) users and give them a chance to engage/exit protocol if they are not agreeable to the changes (2) team in case of compromised owner(s) and give them a chance to perform incident response.  **Recommendation**: Users may be surprised when critical parameters are changed or incentivizer programs completed early without notice. Furthermore, it can erode users' trust since they can’t be sure the protocol rules won’t be changed later on. Compromised owner keys may be used to change protocol addresses/parameters to benefit attackers. Without a time-delay, authorised owners have no time for any planned incident response.   ## Missing Equivalence Checks in Setters **Severity**: Low **Context**: [`NestedFactory.sol#L152-L172`](https://github.com/code-423n4/2022-06-nested/blob/main/contracts/NestedFactory.sol#L152-L172)  **Description**: Setter functions are missing checks to validate if the new value being set is the same as the current value already set in the contract. Such checks will showcase mismatches between on-chain and off-chain states.  **Recommendation**: This may hinder detecting discrepancies between on-chain and off-chain states leading to flawed assumptions of on-chain state and protocol behavior.   ## `receive()` Function Should Emit An Event **Severity**: Low **Context**: [`NestedFactory.sol#L88-L92`](https://github.com/code-423n4/2022-06-nested/blob/main/contracts/NestedFactory.sol#L88-L92), [`Withdrawer.sol#L16-L18`](https://github.com/code-423n4/2022-06-nested/blob/main/contracts/Withdrawer.sol#L16-L18)  **Description**: Consider emitting an event inside this function with `msg.sender` and `msg.value` as the parameters. This would make it easier to track incoming ether transfers.  **Recommendation**: Add events to the `receive()` functions.    ## Lack of Event Emission For Critical Functions **Severity**: Low **Context**: [`BeefyVaultOperator.sol#L36-L67`](https://github.com/code-423n4/2022-06-nested/blob/main/contracts/operators/Beefy/BeefyVaultOperator.sol#L36-L67), [`BeefyVaultOperator.sol#L79-L108`](https://github.com/code-423n4/2022-06-nested/blob/main/contracts/operators/Beefy/BeefyVaultOperator.sol#L79-L108), [`BeefyZapBiswapLPVaultOperator.sol#L46-L77`](https://github.com/code-423n4/2022-06-nested/blob/main/contracts/operators/Beefy/lp/BeefyZapBiswapLPVaultOperator.sol#L46-L77), [`BeefyZapBiswapLPVaultOperator.sol#L91-L121`](https://github.com/code-423n4/2022-06-nested/blob/main/contracts/operators/Beefy/lp/BeefyZapBiswapLPVaultOperator.sol#L91-L121), [`BeefyZapUniswapLPVaultOperator.sol#L46-L77`](https://github.com/code-423n4/2022-06-nested/blob/main/contracts/operators/Beefy/lp/BeefyZapUniswapLPVaultOperator.sol#L46-L77), [`BeefyZapUniswapLPVaultOperator.sol#L91-L121`](https://github.com/code-423n4/2022-06-nested/blob/main/contracts/operators/Beefy/lp/BeefyZapUniswapLPVaultOperator.sol#L91-L121), [`ParaswapOperator.sol#L22-L48`](https://github.com/code-423n4/2022-06-nested/blob/main/contracts/operators/Paraswap/ParaswapOperator.sol#L22-L48)  **Description**: Several functions update critical parameters that are missing event emission. These should be performed to ensure tracking of changes of such critical parameters.  **Recommendation**: Add events to functions that change critical parameters.   ## Unindexed Event Parameters **Severity** Informational **Context**: [`MixinOperatorResolver.sol#L14`](https://github.com/code-423n4/2022-06-nested/blob/main/contracts/abstracts/MixinOperatorResolver.sol#L14), [`TimelockControllerEmergency.sol#L60`](https://github.com/code-423n4/2022-06-nested/blob/main/contracts/governance/TimelockControllerEmergency.sol#L60)  **Description**: Parameters of certain events are expected to be indexed so that they’re included in the block’s bloom filter for faster access. Failure to do so might confuse off-chain tooling looking for such indexed events.  **Recommendation**: Add the indexed keyword to event parameters that should include it.   ## Lack of `solhint` To Ignore Warnings **Severity**: Informational **Context**: [`OwnerProxy.sol#L21-L36`](https://github.com/code-423n4/2022-06-nested/blob/main/contracts/governance/OwnerProxy.sol#L21-L36), [`OperatorScripts.sol#L58-L60`](https://github.com/code-423n4/2022-06-nested/blob/main/contracts/governance/scripts/OperatorScripts.sol#L58-L60)  **Description**: `solhint` is useful to help ignore warnings that aren't really issues. For example the code base has some assembly blocks which promts the warning `Linter: Avoid to use inline assembly. It is acceptable only in rare cases`. Adding in `/* solhint-disable no-inline-assembly */` above it will ignore this warning.  **Recommendation**: Use `solhint` to ignore warnings that aren't really issues.   ## Spelling Errors **Severity**: Informational **Context**: [`NestedFactory.sol#L51 (withdrawed => withdrawn)`](https://github.com/code-423n4/2022-06-nested/blob/main/contracts/NestedFactory.sol#L51), [`NestedFactory.sol#L477 (dont => do not)`](https://github.com/code-423n4/2022-06-nested/blob/main/contracts/NestedFactory.sol#L477), [`NestedFactory.sol#L534 (transfered => transferred)`](https://github.com/code-423n4/2022-06-nested/blob/main/contracts/NestedFactory.sol#L534), [`NestedFactory.sol#L639 (withdrawed => withdrawal)`](https://github.com/code-423n4/2022-06-nested/blob/main/contracts/NestedFactory.sol#L639), [`MixinOperatorResolver.sol#L81 (datas => data(it is already plural))`](https://github.com/code-423n4/2022-06-nested/blob/main/contracts/abstracts/MixinOperatorResolver.sol#L81), [`OwnableProxyDelegation.sol#L17 (setted => set)`](https://github.com/code-423n4/2022-06-nested/blob/main/contracts/abstracts/OwnableProxyDelegation.sol#L17), [`TimeLockControllerEmergency.sol#L183 (datas => data)`](https://github.com/code-423n4/2022-06-nested/blob/main/contracts/governance/TimelockControllerEmergency.sol#L183), [`TimeLockControllerEmergency.sol#L187 (datas => data)`](https://github.com/code-423n4/2022-06-nested/blob/main/contracts/governance/TimelockControllerEmergency.sol#L187), [`TimeLockControllerEmergency.sol#L224 (datas => data)`](https://github.com/code-423n4/2022-06-nested/blob/main/contracts/governance/TimelockControllerEmergency.sol#L224), [`TimeLockControllerEmergency.sol#L230 (datas => data)`](https://github.com/code-423n4/2022-06-nested/blob/main/contracts/governance/TimelockControllerEmergency.sol#L230), [`TimeLockControllerEmergency.sol#L232 (datas => data)`](https://github.com/code-423n4/2022-06-nested/blob/main/contracts/governance/TimelockControllerEmergency.sol#L232), [`BeefyVaultOperator.sol#L95 (WITHDRAWED => WITHDRAWAL)`](https://github.com/code-423n4/2022-06-nested/blob/main/contracts/operators/Beefy/BeefyVaultOperator.sol#L95), [`BeefyZapBiswapLPVaultOperator.sol#L108 (WITHDRAWED => WITHDRAWAL)`](https://github.com/code-423n4/2022-06-nested/blob/main/contracts/operators/Beefy/lp/BeefyZapBiswapLPVaultOperator.sol#L108), [`BeefyZapUniswapLPVaultOperator.sol#L108 (WITHDRAWED => WITHDRAWAL)`](https://github.com/code-423n4/2022-06-nested/blob/main/contracts/operators/Beefy/lp/BeefyZapUniswapLPVaultOperator.sol#L108), [`StakingLPVaultHelpers.sol#L21 (liquitiy => liquidity)`](https://github.com/code-423n4/2022-06-nested/blob/main/contracts/libraries/StakingLPVaultHelpers.sol#L21), [`StakingLPVaultHelpers.sol#L52 (liquitiy => liquidity)`](https://github.com/code-423n4/2022-06-nested/blob/main/contracts/libraries/StakingLPVaultHelpers.sol#L52), [`StakingLPVaultHelpers.sol#L85 (liquitiy => liquidity)`](https://github.com/code-423n4/2022-06-nested/blob/main/contracts/libraries/StakingLPVaultHelpers.sol#L85), [`StakingLPVaultHelpers.sol#L115 (liquitiy => liquidity)`](https://github.com/code-423n4/2022-06-nested/blob/main/contracts/libraries/StakingLPVaultHelpers.sol#L115)  **Description**: Spelling errors in comments can cause confusion to both users and developers.  **Recommendation**: Check all misspellings to ensure they are corrected.   ## Missing or Incomplete NatSpec **Severity**: Informational **Context**: [`All Contracts`](https://github.com/code-423n4/2022-06-nested)  **Description**: Some functions are missing @notice/@dev NatSpec comments for the function, @param for all/some of their parameters and @return for return values. Given that NatSpec is an important part of code documentation, this affects code comprehension, auditability and usability.  **Recommendation**: Add in full NatSpec comments for all functions to have complete code documentation for future use.   ## Too Recent of a Pragma **Severity** Informational **Context**: [`All Contracts`](https://github.com/code-423n4/2022-06-nested)  **Description**: Using too recent of a pragma is risky since they are not battle tested. A rise of a bug that wasn't known on release would cause either a hack or a need to secure funds and redeploy.  **Recommendation**:  Use a Pragma version that has been used for sometime. I would suggest `0.8.4` for the decrease of risk and still has the gas optimizations implemented.
