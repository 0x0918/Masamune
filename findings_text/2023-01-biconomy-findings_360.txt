# Lines of code  https://github.com/code-423n4/2023-01-biconomy/blob/main/scw-contracts/contracts/smart-contract-wallet/paymasters/verifying/singleton/VerifyingSingletonPaymaster.sol#L77-L91   # Vulnerability details  ## Impact Detailed description of the impact of this finding.  ## Proof of Concept  for example, biconomy's wallet policy is - 1 eth for each wallet daily  and attacker does this - create userOp that spends 1 eth for gas - biconomy signs for that tx - attacker does not broadcast the tx and just withholds the signature - attacker creates another tx that spends 1 eth for gas - biconomy does check mainnet and finds out attack haven't spend any gas today so signs the tx - attacker broadcasts both tx(first one and the second one) - attacker spends 2 eth for gas in 1day  ## Tools Used  Contacting livingrock through discord  ## Recommended Mitigation Steps  use nonce per user in paymaster and use that to encode hash ``` contract VerifyingSingletonPaymaster is BasePaymaster {      using ECDSA for bytes32;     // possibly //  using Signatures for UserOperation;     using UserOperationLib for UserOperation;     using PaymasterHelpers for UserOperation;     using PaymasterHelpers for bytes;     using PaymasterHelpers for PaymasterData;      mapping(address => uint256) public paymasterIdBalances;     mapping(address => uint256) public senderNonce;     ...     function getHash(UserOperation calldata userOp)     public pure returns (bytes32) {         //can't use userOp.hash(), since it contains also the paymasterAndData itself.         address sender = userOp.getSender();         return keccak256(abi.encode(                 sender,                 userOp.nonce,                 keccak256(userOp.initCode),                 keccak256(userOp.callData),                 userOp.callGasLimit,                 userOp.verificationGasLimit,                 userOp.preVerificationGas,                 userOp.maxFeePerGas,                 userOp.maxPriorityFeePerGas,                 senderNonce[sender]             ));     } ``` 
