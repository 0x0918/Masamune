## Do not recalculate constant results  Since results are constant, the code should not calculate them over and over again.  [https://github.com/code-423n4/2022-02-concur/blob/main/contracts/ConvexStakingWrapper.sol#L116-L117](https://github.com/code-423n4/2022-02-concur/blob/main/contracts/ConvexStakingWrapper.sol#L116-L117)  ```  registeredRewards[_pid][crv] = CRV_INDEX + 1; //mark registered at index+1 registeredRewards[_pid][cvx] = CVX_INDEX + 1; //mark registered at index+1  ```  ## `StakingRewards.sol` cache variables to save gas  By caching variables, loads from storage can be avoided to save gas.  ```  rewardPerToken() — rewardPerTokenStored  notifyRewardAmount() — rewardsDuration, periodFinish  updateReward() — rewardPerTokenStored (cache the new value)  ```  ## `USDMPegRecovery.sol` cache variables to save gas  By caching variables, loads from storage can be avoided to save gas.  ```  provide() -- step, usdm3crv  ```  ## At setters emit input rather than from storage to save gas  In `StakingRewards.sol`:  ```  setRewardsDuration  setRewardsDistribution  ```
