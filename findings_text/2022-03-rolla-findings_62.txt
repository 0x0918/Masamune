## Issue 1 (Low) - Exclusive time checks should be inclusive  ### Links https://github.com/code-423n4/2022-03-rolla/blob/a06418c9cc847395f3699bdf684a9ac066651ed7/quant-protocol/contracts/Controller.sol#L325-L328  https://github.com/code-423n4/2022-03-rolla/blob/a06418c9cc847395f3699bdf684a9ac066651ed7/quant-protocol/contracts/Controller.sol#L563-L566   ### Impact At least one of the following checks is slightly inaccurate due to exclusive timestamp checks.  ``` require(             block.timestamp > qToken.expiryTime(),             "Controller: Can not exercise options before their expiry"         ); ```  ``` require(             IQToken(_qToken).expiryTime() > block.timestamp,             "Controller: Cannot mint expired options"         ); ```  The second statement ceases minting the moment the expiryTime is hit which makes sense. The first statement doesn't allow the options to be exercised until after the expiry time, causing a gap in functionality.   ### Recommended Steps The first statement should be:  ``` require(             block.timestamp >= qToken.expiryTime(),             "Controller: Can not exercise options before their expiry"         ); ```  ## Issue 2 (Low) - Missing Address(0) Checks in Constructor Address Params  ### Links https://github.com/code-423n4/2022-03-rolla/blob/a06418c9cc847395f3699bdf684a9ac066651ed7/quant-protocol/contracts/Controller.sol#L325-L328  https://github.com/code-423n4/2022-03-rolla/blob/a06418c9cc847395f3699bdf684a9ac066651ed7/quant-protocol/contracts/Controller.sol#L563-L566  ### Impact These two contracts do not check for address(0) in their constructors and will require redeployment if necessary.  ### Recommended Steps Add require statements != address(0) in both constructors.  ## Issue 3 (Low) - Front-Runnable Initializers  ### Links https://github.com/code-423n4/2022-03-rolla/blob/a06418c9cc847395f3699bdf684a9ac066651ed7/quant-protocol/contracts/Controller.sol#L134-L159  ### Impact Lack of access control on initialize(), can be front-run.  ### Recommended Steps Add access control for OnlyOwner.  ## Issue 4 (Low) - Function input doesn't match purpose  ### Links https://github.com/code-423n4/2022-03-rolla/blob/a06418c9cc847395f3699bdf684a9ac066651ed7/quant-protocol/contracts/QuantCalculator.sol#L61-L163  ### Impact The address parameter in the following function is named `_msgSender` but it can arbitrarily be any account since it has external visibility.  ``` function calculateClaimableCollateral(         uint256 _collateralTokenId,         uint256 _amount,         address _msgSender     )         external         view         override         returns (             uint256 returnableCollateral,             address collateralAsset,             uint256 amountToClaim         )     { ```  ### Recommended Steps Rename to "user" or similar.   
