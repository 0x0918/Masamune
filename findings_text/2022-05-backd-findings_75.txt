1. Unused contracts and libraries are imported. https://github.com/code-423n4/2022-05-backd/blob/main/protocol/contracts/tokenomics/KeeperGauge.sol#L4  Recommendation: Remove unused libraries.  2. Checkpoint executed twice when kill the gauge. https://github.com/code-423n4/2022-05-backd/blob/main/protocol/contracts/tokenomics/InflationManager.sol#L427-L428  https://github.com/code-423n4/2022-05-backd/blob/main/protocol/contracts/tokenomics/InflationManager.sol#L461-L462  `InflationManager` call `poolCheckPoint()`, then call `kill()` function, but inside of `kill()` function, `poolCheckPoint()` will be executed again.  Recommendation: Remove `poolCheckPoint()` call before kill.  3. Cache array length before loop to reduce gas cost Cache length of array and use it in the loop is a good solution to reduce gas. Other wise, it will always trying to load length from storage in every loop.  https://github.com/code-423n4/2022-05-backd/blob/main/protocol/contracts/tokenomics/InflationManager.sol#L116  https://github.com/code-423n4/2022-05-backd/blob/main/protocol/contracts/access/RoleManager.sol#L82   Recommendation Cache length of array and use it in loop.  4. Use `!=0` instead of `>0` for uint non zero check. In most of places, there is something like `a > 0` for non-zero check. For Uint variables, there is no negative value, so it’s enough to change to `a != 0`.  Ex. https://github.com/code-423n4/2022-05-backd/blob/main/protocol/contracts/tokenomics/KeeperGauge.sol#L140  Recommendation: Use non-equal operator instead of greater operator for non-zero check.  5. `lastEvent` in `Minter.sol` can be update multiple times. https://github.com/code-423n4/2022-05-backd/blob/main/protocol/contracts/tokenomics/Minter.sol#L222  `_mint` function update `lastEvent` twice – first update in Line 222, and second update inside `executeInflationRateUpdate()`  Recommendation: Optimize code to avoid multiple updates.  6. Use interface contract for external calls. https://github.com/code-423n4/2022-05-backd/blob/main/protocol/contracts/tokenomics/Minter.sol#L56  There is a `IBkdToken` interface, but now it is using `BkdToken` (implementation contract) for external calls. This increase contract size.  Recommendation: Use interface for external calls. 
