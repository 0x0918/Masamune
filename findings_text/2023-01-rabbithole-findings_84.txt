# Lines of code  https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Quest.sol#L50-L53   # Vulnerability details  ## Impact Detailed description of the impact of this finding. An owner might start a quest before the publicly declared official  ``startTime``. This might be done by mistake or on purpose, creating undesirable user experience since a user would expect a quest won't start before its declared public ``startTime``.  This contradicts the [documentation](https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Erc20Quest.sol#L56-L57), which says "Marking a quest ready to start does not mean that it is live. It also requires that the start time has passed".  ## Proof of Concept Provide direct links to all referenced code in GitHub. Add screenshots, logs, or any other relevant proof that illustrates the concept. The ``start()`` below allows an owner to start a quest before the publicly declared official  ``startTime``: ```javascript  function start() public virtual onlyOwner {         isPaused = false;         hasStarted = true;     }  function start() public override {         if (IERC1155(rewardToken).balanceOf(address(this), rewardAmountInWeiOrTokenId) < totalParticipants)             revert TotalAmountExceedsBalance();         super.start();     }   function start() public override {         if (IERC20(rewardToken).balanceOf(address(this)) < maxTotalRewards() + maxProtocolReward())             revert TotalAmountExceedsBalance();         super.start();     }  ```     ## Tools Used Remix  ## Recommended Mitigation Steps There are two ways to fix, 1) automatic start; 2) manual start.  For the automatic start, we just need to introduce a modifier called hasStarted() to replace the state variable ``hasStarted``: ```javascript modifier hasStarted() {           if(block.timestamp < startTime) revert hasNotStarted();           _; } ```  To performed a manual start: ```javasript  function start() public virtual onlyOwner {         if(block.timestamp < startTime) revert tooEarlyToStart();          isPaused = false;         hasStarted = true; } ```   
