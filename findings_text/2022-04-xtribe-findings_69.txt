# Lows and non critical * Typo in the `accrue` function of the `FlyWheelCore` contract - `@notice accrue rewards for a two users on a strategy` (`a` is not needed) * Pragmas should be locked to a specific compiler version, to avoid contracts getting deployed using a different version, which may have a greater risk of undiscovered bugs. * Remove the delegatee anyway (not only if the votes are not zero) - that will make the set not contain delegatees with zero votes     ```sol     function _decrementVotesUntilFree(address user, uint256 votes) internal {         // ...         for (uint256 i = 0; i < size && (userFreeVotes + totalFreed) < votes; i++) {             address delegatee = delegateList[i];             uint256 delegateVotes = _delegatesVotesCount[user][delegatee];             if (delegateVotes != 0) {                 totalFreed += delegateVotes;                                  require(_delegates[user].remove(delegatee)); // Remove from set. Should never fail.                                  _delegatesVotesCount[user][delegatee] = 0;                 _writeCheckpoint(delegatee, _subtract, delegateVotes);                                  emit Undelegation(user, delegatee, delegateVotes);             }         }         userDelegatedVotes[user] -= totalFreed;     }     ``` 
