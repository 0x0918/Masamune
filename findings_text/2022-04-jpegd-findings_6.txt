# Lines of code  https://github.com/code-423n4/2022-04-jpegd/blob/main/contracts/vaults/NFTVault.sol#L675 https://github.com/code-423n4/2022-04-jpegd/blob/main/contracts/vaults/NFTVault.sol#L560   # Vulnerability details  ## Impact In `NFTVault.sol` the `borrow()` function does not follow the Checks Effects Interactions pattern. There are important state updates that occur after an external call which happens in `_openPosition()`.  Assuming that the `nonReentrant` modifier makes this ok is false due to the threat of cross function reentrancy. `require` checks should be done followed by state updates and then any external calls in accord with the Checks Effects Interactions pattern  ## Proof of Concept  https://github.com/code-423n4/2022-04-jpegd/blob/main/contracts/vaults/NFTVault.sol#L675  https://github.com/code-423n4/2022-04-jpegd/blob/main/contracts/vaults/NFTVault.sol#L560  https://fravoll.github.io/solidity-patterns/checks_effects_interactions.html  ## Tools Used Manual code review   ## Recommended Mitigation Steps The `borrow()` function should fully implement the Checks Effects Interactions pattern performing all external calls last and not making important state updates after external calls.   
