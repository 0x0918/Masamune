# [L-01] `ecrecover` does not check for zero address  The solidity `ecrecover` function is called directly to verify the given signatures. However, the `ecrecover` EVM opcode allows malleable (non-unique) signatures and thus is susceptible to replay attacks. A replay attack may not be possible here, but ensuring the signatures are not malleable is considered a best practice.  https://github.com/code-423n4/2022-06-nibbl/tree/main/contracts/NibblVault.sol#L563  ## Recommended Mitigation Steps  Use the `recover` function from [OpenZeppelin's ECDSA library](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol) for signature verification. This is what OpenZeppelin does in their [ERC20 permit implementation](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/83277ff916ac4f58fec072b8f28a252c1245c2f1/contracts/token/ERC20/extensions/draft-ERC20Permit.sol#L64).
