### Low Risk Findings Overview |        | Finding                    |  Instances  | |:-------|:---------------------------|:-----------:| | [L-01] | Missing `address(0)` check |      3      | ### Non-critical Findings Overview |        | Finding                                     |  Instances  | |:-------|:--------------------------------------------|:-----------:| | [N-01] | The use of magic numbers is not recommended |      5      | | [N-02] | Typo                                        |      2      | | [N-03] | Remove TODOâ€™s                               |      1      | ### QA overview per contract | Contract                                                                                                                   |  Total Instances  |  Total Findings  |  Low Findings  |  Low Instances  |  NC Findings  |  NC Instances  | |:---------------------------------------------------------------------------------------------------------------------------|:-----------------:|:----------------:|:--------------:|:---------------:|:-------------:|:--------------:| | [Witch.sol](https://github.com/code-423n4/2022-07-yield/blob/6ab092b8c10e4dabb470918ae15c6451c861655f/contracts/Witch.sol) |        10         |        4         |       1        |        3        |       3       |       7        | | [Witch.sol](https://github.com/code-423n4/2022-07-yield/blob/main/contracts/Witch.sol)                                     |         1         |        1         |       0        |        0        |       1       |       1        | ## Low Risk Findings ### [L-01] Missing `address(0)` check Funds might be lost by accident if check is not implemented. ***3 instances of this issue have been found:*** ###### [L-01] [Witch.sol#L286-L301](https://github.com/code-423n4/2022-07-yield/blob/6ab092b8c10e4dabb470918ae15c6451c861655f/contracts/Witch.sol#L286-L301) ```solidity      function payBase(         bytes12 vaultId,         address to,         uint128 minInkOut,         uint128 maxBaseIn     )         external         returns (             uint256 liquidatorCut,             uint256 auctioneerCut,             uint256 baseIn         )     {         DataTypes.Auction memory auction_ = auctions[vaultId];         require(auction_.start > 0, "Vault not under auction");  ``` ###### [L-01b] [Witch.sol#L176-L177](https://github.com/code-423n4/2022-07-yield/blob/6ab092b8c10e4dabb470918ae15c6451c861655f/contracts/Witch.sol#L176-L177) ```solidity      function auction(bytes12 vaultId, address to)  ``` ###### [L-01c] [Witch.sol#L344-L359](https://github.com/code-423n4/2022-07-yield/blob/6ab092b8c10e4dabb470918ae15c6451c861655f/contracts/Witch.sol#L344-L359) ```solidity      function payFYToken(         bytes12 vaultId,         address to,         uint128 minInkOut,         uint128 maxArtIn     )         external         returns (             uint256 liquidatorCut,             uint256 auctioneerCut,             uint256 artIn         )     {         DataTypes.Auction memory auction_ = auctions[vaultId];         require(auction_.start > 0, "Vault not under auction");  ```  ## Non-critical Findings ### [N-01] The use of magic numbers is not recommended Consider setting constant numbers as a `constant` variable for better readability and clarity. ***5 instances of this issue have been found:*** ###### [N-01] [Witch.sol#L587-L588](https://github.com/code-423n4/2022-07-yield/blob/6ab092b8c10e4dabb470918ae15c6451c861655f/contracts/Witch.sol#L587-L588) ```solidity              proportionNow = 1e18;  ``` ###### [N-01b] [Witch.sol#L105-L106](https://github.com/code-423n4/2022-07-yield/blob/6ab092b8c10e4dabb470918ae15c6451c861655f/contracts/Witch.sol#L105-L106) ```solidity              initialOffer == 0 || initialOffer >= 0.01e18,  ``` ###### [N-01c] [Witch.sol#L108-L109](https://github.com/code-423n4/2022-07-yield/blob/6ab092b8c10e4dabb470918ae15c6451c861655f/contracts/Witch.sol#L108-L109) ```solidity          require(proportion >= 0.01e18, "Proportion below 1%");  ``` ###### [N-01d] [Witch.sol#L162-L163](https://github.com/code-423n4/2022-07-yield/blob/6ab092b8c10e4dabb470918ae15c6451c861655f/contracts/Witch.sol#L162-L163) ```solidity          if (auctioneerReward_ > 1e18) {  ``` ###### [N-01e] [Witch.sol#L591-L592](https://github.com/code-423n4/2022-07-yield/blob/6ab092b8c10e4dabb470918ae15c6451c861655f/contracts/Witch.sol#L591-L592) ```solidity                  uint256(1e18 - initialProportion).wmul(elapsed.wdiv(duration));  ``` ### [N-02] Typo Please fix typos. ***2 instances of this issue have been found:*** ###### [N-02] [Witch.sol#L81](https://github.com/code-423n4/2022-07-yield/blob/main/contracts/Witch.sol#L81) ```solidity  /// @param param Name of parameter to set (must be "ladle") ``` ###### [N-02b] [Witch.sol#L14](https://github.com/code-423n4/2022-07-yield/blob/6ab092b8c10e4dabb470918ae15c6451c861655f/contracts/Witch.sol#L14) ```solidity  uncollateralized -> undercollateralized ``` ### [N-03] Remove TODOâ€™s They add unnecessary cluttler and harm readbility for auditors. ***1 instance of this issue has been found:*** ###### [N-03] [Witch.sol#L577-L578](https://github.com/code-423n4/2022-07-yield/blob/6ab092b8c10e4dabb470918ae15c6451c861655f/contracts/Witch.sol#L577-L578) ```solidity          // TODO: Replace this contract before then ðŸ˜° -> This is funny though  ``` 
